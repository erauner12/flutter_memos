// Mocks generated by Mockito 5.4.5 from annotations
// in flutter_memos/test/providers/workbench_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_cloud_kit/types/cloud_kit_account_status.dart' as _i4;
import 'package:flutter_memos/models/mcp_server_config.dart' as _i6;
import 'package:flutter_memos/models/server_config.dart' as _i5;
import 'package:flutter_memos/models/workbench_item_reference.dart' as _i7;
import 'package:flutter_memos/services/cloud_kit_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CloudKitService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCloudKitService extends _i1.Mock implements _i2.CloudKitService {
  @override
  _i3.Future<_i4.CloudKitAccountStatus> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<_i4.CloudKitAccountStatus>.value(
            _i4.CloudKitAccountStatus.couldNotDetermine),
        returnValueForMissingStub: _i3.Future<_i4.CloudKitAccountStatus>.value(
            _i4.CloudKitAccountStatus.couldNotDetermine),
      ) as _i3.Future<_i4.CloudKitAccountStatus>);

  @override
  _i3.Future<bool> saveServerConfig(_i5.ServerConfig? config) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveServerConfig,
          [config],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<_i5.ServerConfig?> getServerConfig(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getServerConfig,
          [id],
        ),
        returnValue: _i3.Future<_i5.ServerConfig?>.value(),
        returnValueForMissingStub: _i3.Future<_i5.ServerConfig?>.value(),
      ) as _i3.Future<_i5.ServerConfig?>);

  @override
  _i3.Future<List<_i5.ServerConfig>> getAllServerConfigs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllServerConfigs,
          [],
        ),
        returnValue:
            _i3.Future<List<_i5.ServerConfig>>.value(<_i5.ServerConfig>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i5.ServerConfig>>.value(<_i5.ServerConfig>[]),
      ) as _i3.Future<List<_i5.ServerConfig>>);

  @override
  _i3.Future<bool> deleteServerConfig(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteServerConfig,
          [id],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> deleteAllRecordsOfType(String? recordType) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAllRecordsOfType,
          [recordType],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> deleteUserSettingsRecord() => (super.noSuchMethod(
        Invocation.method(
          #deleteUserSettingsRecord,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<String?> getSetting(String? keyName) => (super.noSuchMethod(
        Invocation.method(
          #getSetting,
          [keyName],
        ),
        returnValue: _i3.Future<String?>.value(),
        returnValueForMissingStub: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<bool> saveSetting(
    String? keyName,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSetting,
          [
            keyName,
            value,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> saveMcpServerConfig(_i6.McpServerConfig? config) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMcpServerConfig,
          [config],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<List<_i6.McpServerConfig>> getAllMcpServerConfigs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllMcpServerConfigs,
          [],
        ),
        returnValue: _i3.Future<List<_i6.McpServerConfig>>.value(
            <_i6.McpServerConfig>[]),
        returnValueForMissingStub: _i3.Future<List<_i6.McpServerConfig>>.value(
            <_i6.McpServerConfig>[]),
      ) as _i3.Future<List<_i6.McpServerConfig>>);

  @override
  _i3.Future<bool> deleteMcpServerConfig(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteMcpServerConfig,
          [id],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> saveWorkbenchItemReference(
          _i7.WorkbenchItemReference? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWorkbenchItemReference,
          [item],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<List<_i7.WorkbenchItemReference>>
      getAllWorkbenchItemReferences() => (super.noSuchMethod(
            Invocation.method(
              #getAllWorkbenchItemReferences,
              [],
            ),
            returnValue: _i3.Future<List<_i7.WorkbenchItemReference>>.value(
                <_i7.WorkbenchItemReference>[]),
            returnValueForMissingStub:
                _i3.Future<List<_i7.WorkbenchItemReference>>.value(
                    <_i7.WorkbenchItemReference>[]),
          ) as _i3.Future<List<_i7.WorkbenchItemReference>>);

  @override
  _i3.Future<bool> deleteWorkbenchItemReference(String? referenceId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteWorkbenchItemReference,
          [referenceId],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> updateWorkbenchItemLastOpened(String? referenceId) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateWorkbenchItemLastOpened,
          [referenceId],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
