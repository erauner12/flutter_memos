// Mocks generated by Mockito 5.4.5 from annotations
// in flutter_memos/test/providers/chat_providers_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter_memos/models/chat_session.dart' as _i9;
import 'package:flutter_memos/models/mcp_server_config.dart' as _i4;
import 'package:flutter_memos/services/chat_session_cloud_kit_service.dart'
    as _i10;
import 'package:flutter_memos/services/local_storage_service.dart' as _i8;
import 'package:flutter_memos/services/mcp_client_service.dart' as _i3;
import 'package:flutter_riverpod/flutter_riverpod.dart' as _i2;
import 'package:google_generative_ai/google_generative_ai.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:state_notifier/state_notifier.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRef_0<State extends Object?> extends _i1.SmartFake
    implements _i2.Ref<State> {
  _FakeRef_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMcpClientState_1 extends _i1.SmartFake
    implements _i3.McpClientState {
  _FakeMcpClientState_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMcpProcessResult_2 extends _i1.SmartFake
    implements _i3.McpProcessResult {
  _FakeMcpProcessResult_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [McpClientNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockMcpClientNotifier extends _i1.Mock implements _i3.McpClientNotifier {
  @override
  _i2.Ref<Object?> get ref => (super.noSuchMethod(
        Invocation.getter(#ref),
        returnValue: _FakeRef_0<Object?>(
          this,
          Invocation.getter(#ref),
        ),
        returnValueForMissingStub: _FakeRef_0<Object?>(
          this,
          Invocation.getter(#ref),
        ),
      ) as _i2.Ref<Object?>);

  @override
  Map<String, String> get toolToServerIdMap => (super.noSuchMethod(
        Invocation.getter(#toolToServerIdMap),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);

  @override
  set toolToServerIdMap(Map<String, String>? _toolToServerIdMap) =>
      super.noSuchMethod(
        Invocation.setter(
          #toolToServerIdMap,
          _toolToServerIdMap,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set serverListSubscription(
          _i2.ProviderSubscription<List<_i4.McpServerConfig>>?
              _serverListSubscription) =>
      super.noSuchMethod(
        Invocation.setter(
          #serverListSubscription,
          _serverListSubscription,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set onError(_i2.ErrorListener? _onError) => super.noSuchMethod(
        Invocation.setter(
          #onError,
          _onError,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i5.Stream<_i3.McpClientState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i5.Stream<_i3.McpClientState>.empty(),
        returnValueForMissingStub: _i5.Stream<_i3.McpClientState>.empty(),
      ) as _i5.Stream<_i3.McpClientState>);

  @override
  _i3.McpClientState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeMcpClientState_1(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeMcpClientState_1(
          this,
          Invocation.getter(#state),
        ),
      ) as _i3.McpClientState);

  @override
  set state(_i3.McpClientState? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.McpClientState get debugState => (super.noSuchMethod(
        Invocation.getter(#debugState),
        returnValue: _FakeMcpClientState_1(
          this,
          Invocation.getter(#debugState),
        ),
        returnValueForMissingStub: _FakeMcpClientState_1(
          this,
          Invocation.getter(#debugState),
        ),
      ) as _i3.McpClientState);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void initialize() => super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> connectServer(_i4.McpServerConfig? serverConfig) =>
      (super.noSuchMethod(
        Invocation.method(
          #connectServer,
          [serverConfig],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> disconnectServer(String? serverId) => (super.noSuchMethod(
        Invocation.method(
          #disconnectServer,
          [serverId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void syncConnections() => super.noSuchMethod(
        Invocation.method(
          #syncConnections,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateServerState(
    String? serverId,
    _i3.McpConnectionStatus? status, {
    String? errorMsg,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #updateServerState,
          [
            serverId,
            status,
          ],
          {#errorMsg: errorMsg},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleClientError(
    String? serverId,
    String? errorMsg,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #handleClientError,
          [
            serverId,
            errorMsg,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleClientClose(String? serverId) => super.noSuchMethod(
        Invocation.method(
          #handleClientClose,
          [serverId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rebuildToolMap() => super.noSuchMethod(
        Invocation.method(
          #rebuildToolMap,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<_i3.McpProcessResult> processQuery(
    String? query,
    List<_i6.Content>? history,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #processQuery,
          [
            query,
            history,
          ],
        ),
        returnValue:
            _i5.Future<_i3.McpProcessResult>.value(_FakeMcpProcessResult_2(
          this,
          Invocation.method(
            #processQuery,
            [
              query,
              history,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.McpProcessResult>.value(_FakeMcpProcessResult_2(
          this,
          Invocation.method(
            #processQuery,
            [
              query,
              history,
            ],
          ),
        )),
      ) as _i5.Future<_i3.McpProcessResult>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool updateShouldNotify(
    _i3.McpClientState? old,
    _i3.McpClientState? current,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateShouldNotify,
          [
            old,
            current,
          ],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i2.RemoveListener addListener(
    _i7.Listener<_i3.McpClientState>? listener, {
    bool? fireImmediately = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
          {#fireImmediately: fireImmediately},
        ),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as _i2.RemoveListener);
}

/// A class which mocks [McpClientState].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockMcpClientState extends _i1.Mock implements _i3.McpClientState {
  @override
  List<_i4.McpServerConfig> get serverConfigs => (super.noSuchMethod(
        Invocation.getter(#serverConfigs),
        returnValue: <_i4.McpServerConfig>[],
        returnValueForMissingStub: <_i4.McpServerConfig>[],
      ) as List<_i4.McpServerConfig>);

  @override
  Map<String, _i3.McpConnectionStatus> get serverStatuses =>
      (super.noSuchMethod(
        Invocation.getter(#serverStatuses),
        returnValue: <String, _i3.McpConnectionStatus>{},
        returnValueForMissingStub: <String, _i3.McpConnectionStatus>{},
      ) as Map<String, _i3.McpConnectionStatus>);

  @override
  Map<String, _i3.GoogleMcpClient> get activeClients => (super.noSuchMethod(
        Invocation.getter(#activeClients),
        returnValue: <String, _i3.GoogleMcpClient>{},
        returnValueForMissingStub: <String, _i3.GoogleMcpClient>{},
      ) as Map<String, _i3.GoogleMcpClient>);

  @override
  Map<String, String> get serverErrorMessages => (super.noSuchMethod(
        Invocation.getter(#serverErrorMessages),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);

  @override
  bool get hasActiveConnections => (super.noSuchMethod(
        Invocation.getter(#hasActiveConnections),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  int get connectedServerCount => (super.noSuchMethod(
        Invocation.getter(#connectedServerCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i3.McpClientState copyWith({
    List<_i4.McpServerConfig>? serverConfigs,
    Map<String, _i3.McpConnectionStatus>? serverStatuses,
    Map<String, _i3.GoogleMcpClient>? activeClients,
    Map<String, String>? serverErrorMessages,
    List<String>? removeClientIds,
    List<String>? removeStatusIds,
    List<String>? removeErrorIds,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #serverConfigs: serverConfigs,
            #serverStatuses: serverStatuses,
            #activeClients: activeClients,
            #serverErrorMessages: serverErrorMessages,
            #removeClientIds: removeClientIds,
            #removeStatusIds: removeStatusIds,
            #removeErrorIds: removeErrorIds,
          },
        ),
        returnValue: _FakeMcpClientState_1(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #serverConfigs: serverConfigs,
              #serverStatuses: serverStatuses,
              #activeClients: activeClients,
              #serverErrorMessages: serverErrorMessages,
              #removeClientIds: removeClientIds,
              #removeStatusIds: removeStatusIds,
              #removeErrorIds: removeErrorIds,
            },
          ),
        ),
        returnValueForMissingStub: _FakeMcpClientState_1(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #serverConfigs: serverConfigs,
              #serverStatuses: serverStatuses,
              #activeClients: activeClients,
              #serverErrorMessages: serverErrorMessages,
              #removeClientIds: removeClientIds,
              #removeStatusIds: removeStatusIds,
              #removeErrorIds: removeErrorIds,
            },
          ),
        ),
      ) as _i3.McpClientState);
}

/// A class which mocks [LocalStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorageService extends _i1.Mock
    implements _i8.LocalStorageService {
  @override
  _i5.Future<void> saveActiveChatSession(_i9.ChatSession? session) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveActiveChatSession,
          [session],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i9.ChatSession?> loadActiveChatSession() => (super.noSuchMethod(
        Invocation.method(
          #loadActiveChatSession,
          [],
        ),
        returnValue: _i5.Future<_i9.ChatSession?>.value(),
        returnValueForMissingStub: _i5.Future<_i9.ChatSession?>.value(),
      ) as _i5.Future<_i9.ChatSession?>);

  @override
  _i5.Future<void> deleteActiveChatSession() => (super.noSuchMethod(
        Invocation.method(
          #deleteActiveChatSession,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [ChatSessionCloudKitService].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatSessionCloudKitService extends _i1.Mock
    implements _i10.ChatSessionCloudKitService {
  @override
  _i5.Future<bool> saveChatSession(_i9.ChatSession? session) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveChatSession,
          [session],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<_i9.ChatSession?> getChatSession() => (super.noSuchMethod(
        Invocation.method(
          #getChatSession,
          [],
        ),
        returnValue: _i5.Future<_i9.ChatSession?>.value(),
        returnValueForMissingStub: _i5.Future<_i9.ChatSession?>.value(),
      ) as _i5.Future<_i9.ChatSession?>);

  @override
  _i5.Future<bool> deleteChatSession() => (super.noSuchMethod(
        Invocation.method(
          #deleteChatSession,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}
