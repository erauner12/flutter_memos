// Mocks generated by Mockito 5.4.5 from annotations
// in flutter_memos/test/services/mcp_client_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:flutter_cloud_kit/types/cloud_kit_account_status.dart' as _i10;
import 'package:flutter_memos/models/mcp_server_config.dart' as _i7;
import 'package:flutter_memos/models/server_config.dart' as _i11;
import 'package:flutter_memos/models/workbench_instance.dart' as _i12;
import 'package:flutter_memos/models/workbench_item_reference.dart' as _i13;
import 'package:flutter_memos/services/cloud_kit_service.dart' as _i9;
import 'package:flutter_memos/services/gemini_service.dart' as _i8;
import 'package:flutter_memos/services/mcp_client_service.dart' as _i3;
import 'package:google_generative_ai/google_generative_ai.dart' as _i5;
import 'package:mcp_dart/mcp_dart.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCallToolResult_1 extends _i1.SmartFake
    implements _i2.CallToolResult {
  _FakeCallToolResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GoogleMcpClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleMcpClient extends _i1.Mock implements _i3.GoogleMcpClient {
  MockGoogleMcpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get serverId => (super.noSuchMethod(
        Invocation.getter(#serverId),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#serverId),
        ),
      ) as String);

  @override
  _i2.Client get mcpClient => (super.noSuchMethod(
        Invocation.getter(#mcpClient),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#mcpClient),
        ),
      ) as _i2.Client);

  @override
  bool get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: false,
      ) as bool);

  @override
  List<_i5.Tool> get availableTools => (super.noSuchMethod(
        Invocation.getter(#availableTools),
        returnValue: <_i5.Tool>[],
      ) as List<_i5.Tool>);

  @override
  void setupCallbacks({
    dynamic Function(
      String,
      String,
    )? onError,
    dynamic Function(String)? onClose,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setupCallbacks,
          [],
          {
            #onError: onError,
            #onClose: onClose,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> connectToServer(_i7.McpServerConfig? config) =>
      (super.noSuchMethod(
        Invocation.method(
          #connectToServer,
          [config],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i2.CallToolResult> callTool(_i2.CallToolRequestParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #callTool,
          [params],
        ),
        returnValue: _i6.Future<_i2.CallToolResult>.value(_FakeCallToolResult_1(
          this,
          Invocation.method(
            #callTool,
            [params],
          ),
        )),
      ) as _i6.Future<_i2.CallToolResult>);

  @override
  _i6.Future<void> cleanup() => (super.noSuchMethod(
        Invocation.method(
          #cleanup,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [GeminiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGeminiService extends _i1.Mock implements _i8.GeminiService {
  MockGeminiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);

  @override
  _i6.Future<_i5.GenerateContentResponse> generateContent(
    String? prompt,
    List<_i5.Content>? history, {
    List<_i5.Tool>? tools,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateContent,
          [
            prompt,
            history,
          ],
          {#tools: tools},
        ),
        returnValue: _i6.Future<_i5.GenerateContentResponse>.value(
            _i4.dummyValue<_i5.GenerateContentResponse>(
          this,
          Invocation.method(
            #generateContent,
            [
              prompt,
              history,
            ],
            {#tools: tools},
          ),
        )),
      ) as _i6.Future<_i5.GenerateContentResponse>);

  @override
  _i6.Stream<_i5.GenerateContentResponse> sendMessageStream(
    String? prompt,
    List<_i5.Content>? history,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessageStream,
          [
            prompt,
            history,
          ],
        ),
        returnValue: _i6.Stream<_i5.GenerateContentResponse>.empty(),
      ) as _i6.Stream<_i5.GenerateContentResponse>);
}

/// A class which mocks [CloudKitService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCloudKitService extends _i1.Mock implements _i9.CloudKitService {
  MockCloudKitService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i10.CloudKitAccountStatus> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i6.Future<_i10.CloudKitAccountStatus>.value(
            _i10.CloudKitAccountStatus.couldNotDetermine),
      ) as _i6.Future<_i10.CloudKitAccountStatus>);

  @override
  _i6.Future<bool> saveServerConfig(_i11.ServerConfig? config) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveServerConfig,
          [config],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<_i11.ServerConfig?> getServerConfig(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getServerConfig,
          [id],
        ),
        returnValue: _i6.Future<_i11.ServerConfig?>.value(),
      ) as _i6.Future<_i11.ServerConfig?>);

  @override
  _i6.Future<List<_i11.ServerConfig>> getAllServerConfigs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllServerConfigs,
          [],
        ),
        returnValue:
            _i6.Future<List<_i11.ServerConfig>>.value(<_i11.ServerConfig>[]),
      ) as _i6.Future<List<_i11.ServerConfig>>);

  @override
  _i6.Future<bool> deleteServerConfig(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteServerConfig,
          [id],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> saveMcpServerConfig(_i7.McpServerConfig? config) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMcpServerConfig,
          [config],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<List<_i7.McpServerConfig>> getAllMcpServerConfigs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllMcpServerConfigs,
          [],
        ),
        returnValue: _i6.Future<List<_i7.McpServerConfig>>.value(
            <_i7.McpServerConfig>[]),
      ) as _i6.Future<List<_i7.McpServerConfig>>);

  @override
  _i6.Future<bool> deleteMcpServerConfig(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteMcpServerConfig,
          [id],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> saveWorkbenchInstance(_i12.WorkbenchInstance? instance) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWorkbenchInstance,
          [instance],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<List<_i12.WorkbenchInstance>> getAllWorkbenchInstances() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllWorkbenchInstances,
          [],
        ),
        returnValue: _i6.Future<List<_i12.WorkbenchInstance>>.value(
            <_i12.WorkbenchInstance>[]),
      ) as _i6.Future<List<_i12.WorkbenchInstance>>);

  @override
  _i6.Future<bool> deleteWorkbenchInstance(String? instanceId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteWorkbenchInstance,
          [instanceId],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> saveWorkbenchItemReference(
          _i13.WorkbenchItemReference? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWorkbenchItemReference,
          [item],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<List<_i13.WorkbenchItemReference>> getAllWorkbenchItemReferences(
          {String? instanceId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllWorkbenchItemReferences,
          [],
          {#instanceId: instanceId},
        ),
        returnValue: _i6.Future<List<_i13.WorkbenchItemReference>>.value(
            <_i13.WorkbenchItemReference>[]),
      ) as _i6.Future<List<_i13.WorkbenchItemReference>>);

  @override
  _i6.Future<bool> deleteWorkbenchItemReference(String? referenceId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteWorkbenchItemReference,
          [referenceId],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> deleteAllWorkbenchItemReferences({String? instanceId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAllWorkbenchItemReferences,
          [],
          {#instanceId: instanceId},
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<String?> getSetting(String? keyName) => (super.noSuchMethod(
        Invocation.method(
          #getSetting,
          [keyName],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<bool> saveSetting(
    String? keyName,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSetting,
          [
            keyName,
            value,
          ],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> deleteAllRecordsOfType(String? recordType) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAllRecordsOfType,
          [recordType],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> deleteUserSettingsRecord() => (super.noSuchMethod(
        Invocation.method(
          #deleteUserSettingsRecord,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}
