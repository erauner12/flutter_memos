// Mocks generated by Mockito 5.4.5 from annotations
// in flutter_memos/test/features/memos/providers/memo_providers_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:typed_data' as _i5;

import 'package:flutter_memos/models/server_config.dart' as _i6;
import 'package:flutter_memos/services/base_api_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [BaseApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBaseApiService extends _i1.Mock implements _i2.BaseApiService {
  @override
  String get apiBaseUrl => (super.noSuchMethod(
        Invocation.getter(#apiBaseUrl),
        returnValue: _i3.dummyValue<String>(
          this,
          Invocation.getter(#apiBaseUrl),
        ),
        returnValueForMissingStub: _i3.dummyValue<String>(
          this,
          Invocation.getter(#apiBaseUrl),
        ),
      ) as String);

  @override
  bool get isConfigured => (super.noSuchMethod(
        Invocation.getter(#isConfigured),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i4.Future<void> configureService({
    required String? baseUrl,
    required String? authToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #configureService,
          [],
          {
            #baseUrl: baseUrl,
            #authToken: authToken,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> checkHealth() => (super.noSuchMethod(
        Invocation.method(
          #checkHealth,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<Map<String, dynamic>> uploadResource(
    _i5.Uint8List? fileBytes,
    String? filename,
    String? contentType, {
    _i6.ServerConfig? targetServerOverride,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadResource,
          [
            fileBytes,
            filename,
            contentType,
          ],
          {#targetServerOverride: targetServerOverride},
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<_i5.Uint8List> getResourceData(
    String? resourceIdentifier, {
    _i6.ServerConfig? targetServerOverride,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getResourceData,
          [resourceIdentifier],
          {#targetServerOverride: targetServerOverride},
        ),
        returnValue: _i4.Future<_i5.Uint8List>.value(_i5.Uint8List(0)),
        returnValueForMissingStub:
            _i4.Future<_i5.Uint8List>.value(_i5.Uint8List(0)),
      ) as _i4.Future<_i5.Uint8List>);
}
