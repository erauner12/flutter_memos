services:
  # --- Existing Memos Service ---
  memos:
    image: neosmemo/memos:0.24.0 # Use a specific version
    container_name: memos-server
    environment:
      MEMOS_MODE: 'prod'
      MEMOS_PORT: '5230'
      TZ: 'UTC'
    volumes:
      - ./memos-data:/var/opt/memos
    ports:
      - '5230:5230' # Memos UI/API port
    restart: unless-stopped

  # --- Existing MCP SSE Time Server Service ---
  mcp_sse_time_server:
    build:
      # Context is the specific directory containing its Dockerfile
      context: ./api/mcp_sse_time_server_dart
      dockerfile: Dockerfile
    container_name: mcp-sse-time-server
    ports:
      # Map host port 8999 to container port 8999 (exposed in Dockerfile)
      - '8999:8999'
    restart: unless-stopped

  # --- New MCP SSE Todoist Server Service ---
  mcp_sse_todoist_server:
    build:
      # CHANGE: Update build context to the specific server directory
      context: ./api/mcp_sse_todoist_server_dart
      # Dockerfile is relative to the new context
      dockerfile: Dockerfile
    container_name: mcp-sse-todoist-server
    environment:
      # Pass the Todoist API token securely from the host environment
      # Ensure TODOIST_API_TOKEN is set on the machine running docker-compose up
      - TODOIST_API_TOKEN=${TODOIST_API_TOKEN:?err} # Use :?err to fail if unset
      # Set the port inside the container (must match EXPOSE in Dockerfile and server code)
      - PORT=9000
      # Optional: Add other environment variables if needed by the server
      # - OTHER_VAR=value
    ports:
      # Map host port 9000 to container port 9000
      - '9000:9000'
    restart: unless-stopped
    # Optional: Add depends_on if it needs another service (e.g., a database)
    # depends_on:
    #   - some_other_service

volumes:
  memos-data: # Define the named volume used by Memos
# Ensure the volumes section is correctly placed at the end of the file
